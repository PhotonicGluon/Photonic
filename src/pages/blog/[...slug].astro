---
import { render, type CollectionEntry } from "astro:content";

import { rawPosts, posts } from "@lib/blog";
import type { Post } from "@lib/blog/post";

import BlogImage from "@components/blog/BlogImage.astro";

import BlogLayout from "@layouts/BlogLayout.astro";

// Generate a new path for every collection entry
export async function getStaticPaths() {
    return rawPosts.map((rawPost, i) => {
        return {
            params: { slug: posts[i].slug },
            props: {
                rawPost: rawPost,
                navigation: {
                    prev: i < posts.length - 1 ? posts[i + 1] : undefined,
                    next: i > 0 ? posts[i - 1] : undefined,
                },
            },
        };
    });
}

// Get the entry directly from the prop
export interface Props {
    /** The blog post */
    rawPost: CollectionEntry<"blog">;
    /** Navigation links */
    navigation: {
        /** Previous blog post, based on date */
        prev?: Post;
        /** Next blog post, based on date */
        next?: Post;
    };
}

const { rawPost, navigation } = Astro.props;
const { Content, headings } = await render(rawPost);
---

<BlogLayout post={rawPost.data} filepath={rawPost.filePath} navigation={navigation} headings={headings}>
    <Content components={{ img: BlogImage }} />
</BlogLayout>
