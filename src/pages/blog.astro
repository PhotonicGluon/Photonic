---
import { getCollection } from "astro:content";

import { toPost } from "@lib/blog/post";

import BlogList from "@components/blog/BlogList";
import BlogPagination from "@components/blog/BlogPagination";
import ButtonLink from "@components/generic/ButtonLink.astro";
import SEO from "@components/top/SEO.astro";

import MainLayout from "@layouts/MainLayout.astro";

import type { Post } from "@lib/blog/post";

// Constants
const NUM_PER_PAGE = 10;

// Get all blog posts
const rawPosts = await getCollection("blog");
const unsortedPosts = rawPosts.map((rawPost) => toPost(rawPost.data));
const posts = unsortedPosts.sort((a: Post, b: Post) => {
    return b.pubDate.getTime() - a.pubDate.getTime();
});

const numPages = Math.ceil(posts.length / NUM_PER_PAGE);
---

<MainLayout
    title="Blog"
    class="motion-safe:delay-200 motion-safe:duration-300 motion-safe:animate-in motion-safe:fade-in motion-safe:fill-mode-backwards motion-safe:slide-in-from-top-4"
>
    {/* SEO */}
    <Fragment slot="head-seo">
        <SEO
            title="Blog"
            description="The Photonic Blog"
            openGraph={{
                title: "Blog",
                description: "The Photonic Blog",
                image: {
                    url: "https://raw.githubusercontent.com/PhotonicGluon/Photonic/4c2ae66/public/favicon.png",
                    alt: "Photonic Logo",
                    type: "image/png",
                    width: 500,
                    height: 500,
                },
            }}
        />
    </Fragment>

    {/* Blog posts */}
    <section>
        {/* List of all posts */}
        <div class="grid gap-4 md:grid-cols-2 lg:gap-8">
            <BlogList allPosts={posts} numPages={numPages} numPerPage={NUM_PER_PAGE} client:only />
        </div>

        {/* Post-list content */}
        <div class="relative mt-8 w-full">
            {/* Pagination for blog posts */}
            <div class="inline-block w-full">
                <div class="flex justify-center">
                    <BlogPagination client:only />
                </div>
            </div>

            {/* RSS feed link */}
            <div class="absolute top-0 right-0 hidden lg:block">
                <ButtonLink class="h-12 border hover:bg-white/15" href="/rss.xml">
                    <div class="inline-flex justify-center gap-2 align-middle">
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            fill="none"
                            viewBox="0 0 24 24"
                            stroke-width="1.5"
                            stroke="currentColor"
                            class="size-6"
                        >
                            <path
                                stroke-linecap="round"
                                stroke-linejoin="round"
                                d="M12.75 19.5v-.75a7.5 7.5 0 0 0-7.5-7.5H4.5m0-6.75h.75c7.87 0 14.25 6.38 14.25 14.25v.75M6 18.75a.75.75 0 1 1-1.5 0 .75.75 0 0 1 1.5 0Z"
                            ></path>
                        </svg>
                        <span>Subscribe</span>
                    </div>
                </ButtonLink>
            </div>
        </div>
    </section>
</MainLayout>

{/* Get page number from GET params */}
<script>
    import { postStore } from "@components/blog/store";

    const urlSearchParams = new URLSearchParams(window.location.search);
    const pageParam = urlSearchParams.get("page");
    const page = pageParam ? parseInt(pageParam) - 1 : 0; // Index, so must subtract 1
    if (Number.isNaN(page) || page < 0) {
        urlSearchParams.set("page", "1");
        window.history.replaceState(null, "", `?${urlSearchParams.toString()}`);
        window.location.reload();
    }
    postStore.setKey("page", page);
</script>
