---
import { toDateString } from "@lib/misc/dates";
import type { Project } from "@lib/projects/project";
import ProjectTag from "@components/projects/ProjectTag.astro";

export interface Props {
    id: string;
    project: Project;
}

const { id, project } = Astro.props;
---

<project-card id=`project-${id}` data-id={id}>
    <!-- TODO: Edit card contents -->
    <!-- TODO: Make card intractable (i.e., flip card to see summary) -->
    <span class="name">{project.name}</span>
    <div class="tags">
        {project.tags.map((tag) => <ProjectTag name={tag.name} colour={tag.colour} alpha={tag.alpha} />)}
    </div>
    <span class="duration">
        {toDateString(project.dates.start)} &mdash; {project.dates.end ? toDateString(project.dates.end) : "Present"}
    </span>
    <p class="summary">
        {project.summary}
    </p>
</project-card>

<style>
    project-card {
        /* Design the card */
        /* TODO: We can do better than this... */
        @apply w-[90%] cursor-pointer rounded-xl border border-solid border-white p-[10px]; /* TODO: Adjust width and padding */

        /* Align content to center */
        @apply mx-auto my-0 text-center;
    }

    .name {
        @apply text-2xl font-bold;
    }
</style>

<script>
    class ProjectCard extends HTMLElement {
        connectedCallback() {
            // Go to associated project page on click
            const id = this.dataset.id!;
            this.addEventListener("click", () => {
                window.location.href = `/projects/${id}`;
            });
        }
    }

    customElements.define("project-card", ProjectCard);
</script>
