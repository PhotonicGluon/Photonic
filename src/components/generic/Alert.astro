---
export interface Props {
    /** Optional CSS classes to apply */
    class?: string;
    /* Duration in milliseconds for the fade out of the dismissal of alert, defaults to 300 ms */
    fadeOut?: number;
}

const { class: className = "", fadeOut = 300 } = Astro.props;
---

<div
    class=`alert mx-auto flex w-max max-w-3/4 min-w-64 items-center rounded-md border bg-gray-800 p-4 hover:cursor-pointer hover:bg-gray-700 ${className}`
    role="alert"
    data-fade-out={fadeOut}
>
    {/* Icon */}
    <svg
        class="h-4 w-4 shrink-0"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="currentColor"
        viewBox="0 0 20 20"
    >
        <path
            d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"
        ></path>
    </svg>
    <span class="sr-only">Info</span>

    {/* Alert content */}
    <div class="ms-3 text-sm font-medium">
        <slot />
    </div>
</div>

<script>
    import $ from "jquery";

    document.querySelectorAll(".alert").forEach((_element) => {
        const element = _element as HTMLElement;
        const fadeOutDuration = parseFloat(element.dataset.fadeOut!);

        element.onclick = () => {
            const elementSelector = $(element);
            elementSelector.fadeOut(fadeOutDuration, () => {
                elementSelector.remove();
            });
        };
    });
</script>
