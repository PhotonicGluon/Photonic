---
import Shader from "@components/Shader.astro";

export interface Props {
    // Typography
    /** Title of the page */
    title: string;
    /** Optional font size of the title */
    titleSize?: string;
    /** Optional subtitle of the page */
    subtitle?: string;
    /** Optional font size of the subtitle */
    subtitleSize?: string;

    // Geometry
    /** Optional specification string for the height of the hero box */
    height?: string;

    // Shader
    /**
     * Optional base path to the fragment shader's folder.
     *
     * If not provided, will not use a shader.
     */
    basePath?: string;
}

const {
    title,
    titleSize = "48pt",
    subtitle,
    subtitleSize = "12pt",
    height = "max(300px, 35vh)",
    basePath,
} = Astro.props;
---

<div class="h-[var(--height)]" style={{ "--height": height }}>
    {
        basePath && (
            <>
                <Shader id="hero-shader" basePath={basePath} />
                <div class="absolute top-0 h-[inherit] w-full bg-gradient-to-b from-transparent via-gray-950/40 via-70% to-gray-950" />
            </>
        )
    }
    <div
        class="absolute left-1/2 top-[calc(var(--height)/2)] mx-0 my-auto w-full -translate-x-1/2 -translate-y-1/2 text-center"
        style={{ "--height": height }}
    >
        <h1
            class="m-0 text-[length:var(--titleSize)] font-bold leading-normal text-white"
            style={{ "--titleSize": titleSize }}
        >
            {title}
        </h1>
        {
            subtitle && (
                <h2 class="m-0 text-[length:var(--subtitleSize)] text-white" style={{ "--subtitleSize": subtitleSize }}>
                    {subtitle}
                </h2>
            )
        }
    </div>
</div>
{
    basePath && (
        <div
            class="absolute top-[var(--height)] -z-10 h-64 w-full bg-gradient-to-b from-gray-950 via-gray-950/40 via-30% to-transparent"
            style={{ "--height": height }}
        />
    )
}
