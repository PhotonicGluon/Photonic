---
import Shader from "@components/Shader.astro";

export interface Props {
    // Typography
    /** Title of the page */
    title: string;
    /** Optional font size of the title */
    titleSize?: string;
    /** Optional subtitle of the page */
    subtitle?: string;
    /** Optional font size of the subtitle */
    subtitleSize?: string;

    // Geometry
    /** Optional specification string for the height of the hero box */
    height?: string;

    // Shader
    /**
     * Optional URL to the fragment shader.
     *
     * If not provided, will not use a shader.
     */
    fragURL?: string;
    /**
     * Optional URL to a typescript file containing editable uniforms.
     *
     * Do **not** include a leading slash (i.e., follow the format used by `fragURL`).
     */
    editableUniformsURL?: string;
    /** Optional URL to the image that is used */
    imageURL?: string;
}

const {
    title,
    titleSize = "48pt",
    subtitle,
    subtitleSize = "12pt",
    height = "max(300px, 35vh)",
    fragURL,
    editableUniformsURL,
    imageURL,
} = Astro.props;
---

<div class="hero-box">
    {
        fragURL && (
            <Shader id="hero-shader" fragURL={fragURL} editableUniformsURL={editableUniformsURL} imageURL={imageURL} />
            <div class="overlay"></div>
        )
    }
    <div class="text">
        <h1>{title}</h1>
        {subtitle && <h2>{subtitle}</h2>}
    </div>
</div>
{fragURL && <div class="hero-box-smooth-transition"></div>}

<style define:vars={{ height, titleSize, subtitleSize }}>
    .hero-box {
        @apply h-[var(--height)];
    }

    .hero-box-smooth-transition {
        @apply absolute top-[var(--height)] -z-10 h-64 w-screen bg-gradient-to-b from-gray-950 via-gray-950/40 via-30% to-transparent;
    }

    .overlay {
        /* TODO: Handle 'light mode' */
        @apply absolute top-0 h-[inherit] w-full bg-gradient-to-b from-transparent via-gray-950/40 via-70% to-gray-950;
    }

    .text {
        @apply absolute left-1/2 top-[calc(var(--height)/2)] mx-0 my-auto w-full -translate-x-1/2 -translate-y-1/2 text-center;
    }

    .text * {
        @apply m-0 text-white;
    }

    .text h1 {
        @apply text-[length:var(--titleSize)];
    }

    .text h2 {
        @apply text-[length:var(--subtitleSize)];
    }
</style>
